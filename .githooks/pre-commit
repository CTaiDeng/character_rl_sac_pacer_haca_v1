#!/usr/bin/env bash
set -euo pipefail

# Hooks disabled by request: no checks, no mutations.
echo "[pre-commit] disabled (temporarily) — skipping all checks"
exit 0

# Pre-commit (no-mutate mode): 只做校验，不修改工作区或暂存区中的任何文件。

repo_root="$(git rev-parse --show-toplevel)"
cd "$repo_root"

# Enforce UTF-8 to reduce mojibake on Windows
export PYTHONUTF8=1
export PYTHONIOENCODING=UTF-8

# Prefer project venv Python, then system python3/python
if [ -x "$repo_root/.venv/Scripts/python.exe" ]; then
  PY="$repo_root/.venv/Scripts/python.exe"
elif [ -x "$repo_root/.venv/bin/python3" ]; then
  PY="$repo_root/.venv/bin/python3"
elif [ -x "$repo_root/.venv/bin/python" ]; then
  PY="$repo_root/.venv/bin/python"
elif command -v python3 >/dev/null 2>&1; then
  PY=python3
elif command -v python >/dev/null 2>&1; then
  PY=python
else
  echo "[pre-commit] ERROR: python interpreter not found" >&2
  exit 1
fi

echo "[pre-commit] No-mutate mode: 跳过一切会写文件的脚本"

# Forbid adding placeholder summary lines (> 摘要：TODO …)
echo "[pre-commit] Check forbidden placeholder summary"
"$PY" scripts/check_no_todo_summary.py || exit 1

## 保留只读校验（不修改文件）

# Validate staged files respect .gitattributes: UTF-8 (no BOM) + LF for eol=lf
echo "[pre-commit] Validate UTF-8 (no BOM) + LF as per .gitattributes"
"$PY" scripts/check_eol_utf8_by_gitattributes.py

## 禁止钩子修改工作区或暂存区：不执行清理、不执行 git add

exit 0
